package pkg;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.Reader;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Template {

    public static void fillIn(Map<String, Map<String, String>> peopleMap, String templateFileName) {
        Reader r;
        try {
            // reader
            r = new FileReader(templateFileName);
            BufferedReader bfr = new BufferedReader(r);

            // writer
            // String filePath = ;
            // FileWriter fw = new FileWriter(filePath, false);
            // BufferedWriter bfw = new BufferedWriter(fw);
            String line;

            // for each name, write to output file with details of the person
            for (String name : peopleMap.keySet()) {

                // create output file
                String filename = name + ".txt";
                FileWriter fw = new FileWriter(filename, false);
                BufferedWriter bfw = new BufferedWriter(fw);
                while ((line = bfr.readLine()) != null) {
                    // String placeholder = line
                    Map<String, String> personDetails = peopleMap.get(name);
                    Integer variableCounter = 0;
                    for (String variable : personDetails.keySet()) {
                        variableCounter++;
                        if (line.contains(variable)) {
                            line = line.replace("<<", "");
                            line = line.replace(">>", "");
                            line = line.replace(variable, personDetails.get(variable));
                            // if (line.contains("\n")) {
                            // String[] splitLine = line.split("\n");
                            // line = "";
                            // for (String string : splitLine) {
                            // line = String.join("\n", string);
                            // }
                            // }
                            // bfw.write(line);
                            // bfw.flush();
                        }
                    }
                    if (variableCounter == personDetails.keySet().size()) {
                        // split by newline and file write.
                        bfw.write(line);
                        bfw.flush();
                    }
                }
                bfw.close();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
